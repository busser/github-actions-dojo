name: 'main-workflow'
on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
env:
  IMAGE_REPOSITORY: 'busser/foobar'
jobs:
  run-tests:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Check out source code'
        uses: 'actions/checkout@v2'
      - name: 'Set up Go'
        uses: 'actions/setup-go@v2-beta'
        with:
          go-version: '^1.14'
      - name: 'Print Go version'
        run: go version
      - name: 'Run unit tests'
        run: go test -v ./...
  build-and-release:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Check out source code'
        uses: 'actions/checkout@v2'
      - name: 'Build and push container image'
        uses: 'docker/build-push-action@v1'
        with:
          username: '${{ secrets.DOCKER_USERNAME }}'
          password: '${{ secrets.DOCKER_PASSWORD }}'
          repository: '${{ env.IMAGE_REPOSITORY }}'
          tags: '${{ env.GITHUB_SHA }}'
  deploy:
    runs-on: 'ubuntu-latest'
    if: github.ref == 'refs/heads/master'
    needs:
      - 'run-tests'
      - 'build-and-release'
    steps:
      - name: 'Check out source code'
        uses: 'actions/checkout@v2'
      - name: 'Set up kubectl'
        uses: 'azure/setup-kubectl@v1'
        with:
          version: 'v1.14.10'
      - name: 'Configure kubectl'
        run: |
          echo ${{ secrets.KUBECONFIG_B64 }} | base64 --decode > kubeconfig.yml
          echo "::set-env name=KUBECONFIG::$(pwd)/kubeconfig.yml"
      - name: 'Setup kustomize'
        uses: 'imranismail/setup-kustomize@v1'
        with:
          kustomize-version: '3.5.4'
      - name: 'Kustomize Kubernetes resources'
        working-directory: './manifests'
        run: kustomize edit set image ${IMAGE_REPOSITORY}=${IMAGE_REPOSITORY}:${GITHUB_SHA}
      - name: 'Deploy to Kubernetes'
        run: kubectl apply --kustomize manifests/
      - name: 'Validate deployment'
        run: kubectl rollout status --timeout 120s deployment/foobar
